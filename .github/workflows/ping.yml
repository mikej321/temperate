name: ping-temperate
on:
  schedule:
    - cron: "*/5 * * * *"   # every 5 minutes
  workflow_dispatch:

concurrency:
  group: ping-temperate
  cancel-in-progress: true

jobs:
  ping:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Jitter
        id: jitter
        run: |
          JITTER=$((RANDOM % 30))  # 0-29s
          echo "sleeping $JITTERs to add jitter"
          sleep $JITTER

      - name: Call health endpoint (GET, with retries)
        env:
          TARGET_URL: ${{ secrets.TARGET_URL }}   # e.g. https://your-app.onrender.com/healthz
          TASK_SECRET: ${{ secrets.TASK_SECRET }} # if you check a header on /healthz
        run: |
          set -euo pipefail
          echo "Pinging: $TARGET_URL"
          curl -fsS --retry 3 --retry-delay 5 --retry-all-errors -m 20 \
            -H "User-Agent: keepalive" \
            -H "X-Task-Secret: $TASK_SECRET" \
            "$TARGET_URL" -o /dev/null


